/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as ProfileProfileIdImport } from './routes/profile/$profileId'
import { Route as GameGameidImport } from './routes/game/$gameid'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileProfileIdRoute = ProfileProfileIdImport.update({
  path: '/profile/$profileId',
  getParentRoute: () => rootRoute,
} as any)

const GameGameidRoute = GameGameidImport.update({
  path: '/game/$gameid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/game/$gameid': {
      id: '/game/$gameid'
      path: '/game/$gameid'
      fullPath: '/game/$gameid'
      preLoaderRoute: typeof GameGameidImport
      parentRoute: typeof rootRoute
    }
    '/profile/$profileId': {
      id: '/profile/$profileId'
      path: '/profile/$profileId'
      fullPath: '/profile/$profileId'
      preLoaderRoute: typeof ProfileProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/game/$gameid': typeof GameGameidRoute
  '/profile/$profileId': typeof ProfileProfileIdRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/register': typeof RegisterIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/game/$gameid': typeof GameGameidRoute
  '/profile/$profileId': typeof ProfileProfileIdRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/register': typeof RegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/game/$gameid': typeof GameGameidRoute
  '/profile/$profileId': typeof ProfileProfileIdRoute
  '/login/': typeof LoginIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/register/': typeof RegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/game/$gameid'
    | '/profile/$profileId'
    | '/login'
    | '/profile'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/game/$gameid'
    | '/profile/$profileId'
    | '/login'
    | '/profile'
    | '/register'
  id:
    | '__root__'
    | '/'
    | '/game/$gameid'
    | '/profile/$profileId'
    | '/login/'
    | '/profile/'
    | '/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GameGameidRoute: typeof GameGameidRoute
  ProfileProfileIdRoute: typeof ProfileProfileIdRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GameGameidRoute: GameGameidRoute,
  ProfileProfileIdRoute: ProfileProfileIdRoute,
  LoginIndexRoute: LoginIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/game/$gameid",
        "/profile/$profileId",
        "/login/",
        "/profile/",
        "/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/game/$gameid": {
      "filePath": "game/$gameid.tsx"
    },
    "/profile/$profileId": {
      "filePath": "profile/$profileId.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
